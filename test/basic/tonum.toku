local res, of = tonum("69");
assert(res == 69 and of == nil);
res, of = tonum("-69");
assert(res == -69 and of == nil);
res, of = tonum("69.420");
assert(res == 69.420 and of == nil);
res, of = tonum("-69.420");
assert(res == -69.420 and of == nil);
res, of = tonum(".420");
assert(res == .420 and of == nil);
res, of = tonum("-.420");
assert(res == -.420 and of == nil);
res, of = tonum("05");
assert(res == 05 and of == nil);
res, of = tonum("0055");
assert(res == 0055 and of == nil);
res, of = tonum("69.420e2");
assert(res == 69.420e2 and of == nil);
res, of = tonum(".420e-2");
assert(res == .420e-2 and of == nil);
res, of = tonum("0x15");
assert(res == 0x15 and of == nil);
res, of = tonum("-0x15");
assert(res == -0x15 and of == nil);
res, of = tonum("0x15P4");
assert(res == 0x15P4 and of == nil);
res, of = tonum("-0x15p-4");
assert(res == -0x15p-4 and of == nil);
res, of = tonum("inf");
assert(res == inf and of == nil);
res, of = tonum("-inf");
assert(res == -inf and of == nil);
res, of = tonum("infinity");
assert(res == infinity and of == nil);
res, of = tonum("-infinity");
assert(res == -infinity and of == nil);
res, of = tonum("InfiNity");
assert(res == infinity and of == nil);
res, of = tonum("15e15324234");
assert(res == inf and of == 1);
res, of = tonum("-15e153234");
assert(res == -inf and of == 1);
res, of = tonum("15e-400");
assert(res and of == -1);
res, of = tonum("63ab", 16);
assert(res == 25515 and of == nil);
res, of = tonum("63abzg42z", 36);
assert(res == 17184244426667 and of == nil);
res, of = tonum("-63abzg42z", 36);
assert(res == -17184244426667 and of == nil);
res, of = tonum("63abzg42zzzzzzzzzz5555zzzzzzzzzzzzzzzzzzzzzzzz", 36);
assert(res and of == 1);
res, of = tonum("-63abzg42zzzzzzzzzz5555zzzzzzzzzzzzzzzzzzzzzzzz", 36);
assert(res and of == -1);

assert(!tonum("NaN"));
assert(!tonum("nan"));

/*
** Asserts below depends on the types Tokudae was compiled with.
** Currently Tokudae can be compiled only with 64 bit integers and floats.
*/
if !__port {
    res, of = tonum("0x7fffffffffffffff", 16);
    assert(res == 0x7fffffffffffffff and of == nil);
    res, of = tonum("-0x8000000000000000", 16);
    assert(res == -0x8000000000000000 and of == nil);
    res, of = tonum("0x8000000000000001", 16);
    assert(res == 0x7fffffffffffffff and of == 1);
    res, of = tonum("-0x8000000000000001", 16);
    assert(res == 0x7fffffffffffffff+1 and of == -1);
    res, of = tonum("0b1111111111111111111111111111111111111111111111111111111111111111");
    assert(res == 0b1111111111111111111111111111111111111111111111111111111111111111 and !of);
    res, of = tonum("0b0111111111111111111111111111111111111111111111111111111111111111",2);
    assert(res == 0b0111111111111111111111111111111111111111111111111111111111111111 and !of);
}
